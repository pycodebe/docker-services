version: '3.2'

services:
  python:
    container_name: python
    build:
      context: .
      dockerfile: 
        docker/dev/python/Dockerfile
      args:
        requirements: requirements/dev.txt
    environment:
      - DJANGO_SETTINGS_MODULE=framework.settings.development
      - FAKTORY_URL=faktory-server:7419
    volumes:
      - ./src:/src
    expose:
      - "8000"
    depends_on:
      database:
        condition: service_healthy
  
  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile:
        docker/dev/nginx/Dockerfile
    ports:
      - "80:80"
    depends_on:
      - python
  
  faktory-server:
    container_name: faktory-server
    image: contribsys/faktory:1.6.0
    command: ./faktory -b :7419 -w :7420 -l debug
    ports:
      - "7419:7419"
      - "7420:7420"

  faktory-workers:
    container_name: faktory-workers
    build:
      context: .
      dockerfile: 
        docker/dev/faktory_workers/Dockerfile
    environment:
      - FAKTORY_URL=faktory-server:7419
    depends_on:
      - faktory-server
    links:
      - faktory-server

  apm-server:
    container_name: apm-server
    image: docker.elastic.co/apm/apm-server:7.15.2
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    ports:
      - "8200:8200"
    networks:
      - elastic
    command: >
       apm-server -e
         -E apm-server.rum.enabled=true
         -E setup.kibana.host=kibana:5601
         -E setup.template.settings.index.number_of_replicas=0
         -E apm-server.kibana.enabled=true
         -E apm-server.kibana.host=kibana:5601
         -E output.elasticsearch.hosts=["elasticsearch:9200"]
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/
  
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    environment:
    - bootstrap.memory_lock=true
    - cluster.name=docker-cluster
    - cluster.routing.allocation.disk.threshold_enabled=false
    - discovery.type=single-node
    - ES_JAVA_OPTS=-XX:UseAVX=2 -Xms1g -Xmx1g
    ulimits:
      memlock:
        hard: -1
        soft: -1
    volumes:
    - esdata:/usr/share/elasticsearch/data
    ports:
    - 9200:9200
    networks:
    - elastic
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'
  
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.15.2
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
    - 5601:5601
    networks:
    - elastic
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status

  database:
    container_name: database
    build:
      context: .
      dockerfile: 
        docker/dev/database/Dockerfile
    environment:
      - ORACLE_RANDOM_PASSWORD=yes
    volumes:
      - oracle_db:/var/lib/oracle_db
      - oracle_db_data:/var/lib/oracle_db/data
    ports:
      - 1521:1521
    healthcheck:
      test: ["CMD", "bash", "-c", "echo 'select 1 from dual;' | sqlplus / as sysdba"]
      interval: 20s
      timeout: 20s
      retries: 60

  cronicle:
    container_name: cronicle
    image: svendowideit/cronicle
    ports:
      - "3012:3012"

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data
    ports:
      - 9000:9000

  maildev:
    image: maildev/maildev
    container_name: mail-service
    ports:
      - 1080:1080
      - 1025:1025

volumes:
  esdata:
    driver: local
  oracle_db:
    driver: local
  oracle_db_data:
    driver: local

networks:
  elastic:
    driver: bridge